{"version":3,"file":"static/js/564.05b136d3.chunk.js","mappings":"6RAIaA,EAAUC,EAAAA,EAAAA,IAAH,2JAUPC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,8PAeVG,EAASH,EAAAA,EAAAA,IAAH,uHAONI,EAAQJ,EAAAA,EAAAA,GAAH,+DAKLK,EAAYL,EAAAA,EAAAA,IAAH,+DAKTM,EAAgBN,EAAAA,EAAAA,IAAH,6DAKbO,EAAsBP,EAAAA,EAAAA,IAAH,6FAMnBQ,GAAcR,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,8UAqBXS,EAAgBT,EAAAA,EAAAA,IAAH,kE,SChB1B,EA7CqB,WAAO,IAAD,EACzB,GAA0BU,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAQjB,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaL,GAASM,MAAK,SAAAR,GAAK,OAAIC,EAASD,EAAb,GACjC,GAAE,CAACE,IAEU,OAAVF,EAAJ,CAGA,IAAQS,EAAuDT,EAAvDS,MAAOC,EAAgDV,EAAhDU,aAAcC,EAAkCX,EAAlCW,YAAaC,EAAqBZ,EAArBY,SACpCC,EChCR,SAAmBC,GAGjB,IAFA,IAAMC,EAAM,GAEHC,EAAQ,EAAGA,EAAQF,EAAOG,OAAQD,IAAS,CAClD,IAAME,EAAOC,OAAOC,OAAON,EAAOE,IAClCD,EAAIM,KAAKH,EAAK,GACf,CACD,OAAOH,EAAIO,KAAK,KACjB,CDwBsBC,CAD0CvB,EAAXc,QAEpD,OACE,UAAC1B,EAAD,YACE,SAACE,EAAD,CAAYkC,GAAE,UAAEpB,EAASqB,aAAX,QAAoB,IAAlC,mBACA,UAAC/B,EAAD,YACE,SAACF,EAAD,CAAQkC,IAAG,UAfI,oCAeJ,OAAoBf,GAAegB,IAAKlB,KACnD,UAACd,EAAD,YACE,SAACF,EAAD,UAAQgB,KACR,yCACA,yBAAImB,OAAOlB,GAAcmB,QAAQ,GAAjC,YACA,uCACA,6BAAKjB,MACL,oCACA,uBAAIC,WAGR,UAACjB,EAAD,YACE,qDACA,UAACE,EAAD,YACE,SAACD,EAAD,CAAa2B,GAAG,OAAhB,mBACA,SAAC3B,EAAD,CAAa2B,GAAG,UAAhB,4BAGJ,SAAC,EAAAM,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QA1BL,CA8BF,C,mMExDDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJiB,oCAOnB,IAAMC,EAAiB,mCAAG,oGACDF,EAAAA,EAAAA,IAAU,wBADT,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,qDAKjB9B,EAAY,mCAAG,WAAM+B,GAAN,uFACIL,EAAAA,EAAAA,IAAA,iBAAoBK,IADxB,cACbF,EADa,yBAGZA,EAASC,MAHG,2CAAH,sDAMZE,EAAmB,mCAAG,WAAMD,GAAN,uFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADG,cACpBF,EADoB,yBAGnBA,EAASC,KAAKG,MAHK,2CAAH,sDAMnBC,EAAmB,mCAAG,WAAMH,GAAN,uFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADG,cACpBF,EADoB,yBAEnBA,EAASC,KAAKK,SAFK,2CAAH,sDAKnBC,EAAqB,mCAAG,WAAMC,GAAN,uFACLX,EAAAA,EAAAA,IAAU,gBAAiB,CAChDY,OAAQ,CACND,MAAOA,KAHiB,cACtBR,EADsB,yBAMrBA,EAASC,KAAKK,SANO,2CAAH,qD","sources":["pages/MovieDetails/MovieDetailStyled.styled.js","pages/MovieDetails/MovieDetails.jsx","utils/getGenres.js","utils/FilmsAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  max-width: 1170px;\n  margin: 0 auto;\n  padding: 0 30px;\n\n  @media screen and (max-width: 768px) {\n    padding: 0 8px;\n  }\n`;\n\nexport const BackButton = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  padding: 10px 20px;\n  color: #fff;\n  background-color: #20c997;\n  border-radius: 5px;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  border-radius: 5px 5px 0 0;\n  object-fit: cover;\n  object-position: top;\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  margin-top: 10px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  margin-top: 10px;\n`;\n\nexport const MovieTextInfo = styled.div`\n  padding: 20px;\n  padding-top: 0;\n`;\n\nexport const AdditionalMovieInfo = styled.div`\n  padding-top: 5px;\n  padding-bottom: 5px;\n  margin-bottom: 20px;\n`;\n\nexport const NavLinkItem = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  padding: 5px 10px;\n  color: currentColor;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n\n  &.active {\n    color: #fff;\n    background-color: #20c997;\n    font-weight: 500;\n\n    text-decoration: none;\n  }\n`;\n\nexport const MovieInfoLink = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieByID } from 'utils/FilmsAPI';\nimport { Loader } from '../../components/Loader/Loader';\nimport { getGenres } from '../../utils/getGenres';\nimport {\n  Wrapper,\n  BackButton,\n  Poster,\n  Title,\n  NavLinkItem,\n  AdditionalMovieInfo,\n  MovieInfo,\n  MovieTextInfo,\n  MovieInfoLink,\n} from './MovieDetailStyled.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300/';\n\n  useEffect(() => {\n    getMovieByID(movieId).then(movie => setMovie(movie));\n  }, [movieId]);\n\n  if (movie === null) {\n    return;\n  }\n  const { title, vote_average, poster_path, overview, genres } = movie;\n  const genresString = getGenres(genres);\n  return (\n    <Wrapper>\n      <BackButton to={location.state ?? '/'}>Back</BackButton>\n      <MovieInfo>\n        <Poster src={`${BASE_IMG_URL}${poster_path}`} alt={title} />\n        <MovieTextInfo>\n          <Title>{title}</Title>\n          <h2>User score:</h2>\n          <p>{Number(vote_average).toFixed(2)} / 10</p>\n          <h2>Owerview:</h2>\n          <p> {overview}</p>\n          <h2>Genres</h2>\n          <p>{genresString}</p>\n        </MovieTextInfo>\n      </MovieInfo>\n      <AdditionalMovieInfo>\n        <h3>Additional information:</h3>\n        <MovieInfoLink>\n          <NavLinkItem to=\"cast\">Cast</NavLinkItem>\n          <NavLinkItem to=\"reviews\">Reviews</NavLinkItem>\n        </MovieInfoLink>\n      </AdditionalMovieInfo>\n      <Suspense fallback={<Loader></Loader>}>\n        <Outlet />\n      </Suspense>\n    </Wrapper>\n  );\n};\n\nexport default MovieDetails;\n","function getGenres(genres) {\n  const arr = [];\n\n  for (let index = 0; index < genres.length; index++) {\n    const name = Object.values(genres[index]);\n    arr.push(name[1]);\n  }\n  return arr.join(', ');\n}\n\nexport { getGenres };\n","import axios from 'axios';\n\nconst AUTH_TOKEN = '3cfddd5e97fd8d1a3fdf959358de6593';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: AUTH_TOKEN,\n};\n\nconst getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n  return response.data;\n};\n\nconst getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n\n  return response.data;\n};\n\nconst getMovieCreditsByID = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n\n  return response.data.cast;\n};\n\nconst getMovieReviewsByID = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n\nconst getMovieByQuerySearch = async query => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return response.data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieByID,\n  getMovieCreditsByID,\n  getMovieReviewsByID,\n  getMovieByQuerySearch,\n};\n"],"names":["Wrapper","styled","BackButton","NavLink","Poster","Title","MovieInfo","MovieTextInfo","AdditionalMovieInfo","NavLinkItem","MovieInfoLink","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","getMovieByID","then","title","vote_average","poster_path","overview","genresString","genres","arr","index","length","name","Object","values","push","join","getGenres","to","state","src","alt","Number","toFixed","Suspense","fallback","Loader","axios","api_key","getTrendingMovies","response","data","id","getMovieCreditsByID","cast","getMovieReviewsByID","results","getMovieByQuerySearch","query","params"],"sourceRoot":""}